FROM fips-builder-windows

SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop';"]

ENV OPENSSL_SEMVER="1.0.2" \
    OPENSSL_BUILD_VER="u" \
    OPENSSL_SHA256="ecd0c6ffb493dd06707d38b14bb4d8c2288bb7033735606569d8f90f89669d16"

# Download and unpack the OpenSSL source
RUN Write-Host -ForegroundColor Green $('Downloading OpenSSL ({0}{1})...' -f $env:OPENSSL_SEMVER,$env:OPENSSL_BUILD_VER); \
    (New-Object System.Net.WebClient).DownloadFile($('https://www.openssl.org/source/old/{0}/openssl-{0}{1}.tar.gz' -f $env:OPENSSL_SEMVER,$env:OPENSSL_BUILD_VER), 'C:/tmp/openssl.tar.gz'); \
    \
    Write-Host -ForegroundColor Green 'Verifying checksum...'; \
    $hash = Get-FileHash 'C:/tmp/openssl.tar.gz' -Algorithm 'SHA256'; \
    if ($hash.Hash.ToLower() -ne $env:OPENSSL_SHA256) { throw $('Checksum mismatch (OpenSSL)! Expected {0}, got {1}!' -f $hash,$env:OPENSSL_SHA256) };

# Get our canister files to the right location
COPY --from=fips-canister-windows C:/usr/local/ssl C:/opt/fips/ssl

# Build OpensSSL
ENV SYSTEM="mingw64"
COPY openssl_extract_and_build.sh /

RUN $proc = Start-Process "C:/tools/msys64/usr/bin/bash.exe" -NoNewWindow \
                                                             -Wait \
                                                             -PassThru \
                                                             -ArgumentList \"-ec \"\"cd /c/tmp && /c/openssl_extract_and_build.sh\"\"\"; \
     if ($proc.ExitCode) { throw ('OpenSSL build failed: 0x{0:x}' -f $proc.ExitCode) }
